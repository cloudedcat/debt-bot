// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudedcat/debt-bot/manager (interfaces: Service)

// Package mock_manager is a generated GoMock package.
package mock_manager

import (
	model "github.com/cloudedcat/debt-bot/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// ListParticipant mocks base method
func (m *MockService) ListParticipant(arg0 model.GroupID) (model.Participants, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListParticipant", arg0)
	ret0, _ := ret[0].(model.Participants)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListParticipant indicates an expected call of ListParticipant
func (mr *MockServiceMockRecorder) ListParticipant(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListParticipant", reflect.TypeOf((*MockService)(nil).ListParticipant), arg0)
}

// RegisterGroup mocks base method
func (m *MockService) RegisterGroup(arg0 model.Group) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterGroup", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterGroup indicates an expected call of RegisterGroup
func (mr *MockServiceMockRecorder) RegisterGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterGroup", reflect.TypeOf((*MockService)(nil).RegisterGroup), arg0)
}

// RegisterParticipant mocks base method
func (m *MockService) RegisterParticipant(arg0 model.GroupID, arg1 model.Participant) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterParticipant", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterParticipant indicates an expected call of RegisterParticipant
func (mr *MockServiceMockRecorder) RegisterParticipant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterParticipant", reflect.TypeOf((*MockService)(nil).RegisterParticipant), arg0, arg1)
}
