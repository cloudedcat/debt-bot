// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudedcat/debt-bot/calculator (interfaces: Service)

// Package mock_calculator is a generated GoMock package.
package mock_calculator

import (
	calculator "github.com/cloudedcat/debt-bot/calculator"
	model "github.com/cloudedcat/debt-bot/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// AddDebtsByAliases mocks base method
func (m *MockService) AddDebtsByAliases(arg0 model.GroupID, arg1 ...calculator.DebtWithAliases) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AddDebtsByAliases", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDebtsByAliases indicates an expected call of AddDebtsByAliases
func (mr *MockServiceMockRecorder) AddDebtsByAliases(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDebtsByAliases", reflect.TypeOf((*MockService)(nil).AddDebtsByAliases), varargs...)
}

// CalculateDebts mocks base method
func (m *MockService) CalculateDebts(arg0 model.GroupID) ([]calculator.FinalDebt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalculateDebts", arg0)
	ret0, _ := ret[0].([]calculator.FinalDebt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CalculateDebts indicates an expected call of CalculateDebts
func (mr *MockServiceMockRecorder) CalculateDebts(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalculateDebts", reflect.TypeOf((*MockService)(nil).CalculateDebts), arg0)
}
